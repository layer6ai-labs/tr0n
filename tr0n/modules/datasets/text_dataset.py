from torch.utils.data import Dataset


class TextDataset(Dataset):
    def __init__(self, dec_type: str, stylegan_eval_mode: str='test', nvae_model: str='ffhq') -> None:
        super().__init__()

        # add more texts to evaluate translator on
        if dec_type == 'biggan':
            self.texts = [
                'A picture of a flaming dog.',
                'A painting of a starry night.',
                "A photo of a flaming dog rendered in unreal engine.",
                "A dog near a boat",
                "A colorful robot under moonlight",
                "Snow in a valley",
                "A photo of MIT",
                "The Yellow Smoke That Rubs Its Muzzle On The Window-Panes.",
                "View from on top of a mountain where you can see a village below at night with the lights on.",
                "An painting of a Starry Night.",
                "When the wind blows",
                "A city in prosperity wiht fireworks on the sky.",
                "A photo sunset over a mountain range",
                "A photo of a tower in front of a mountain",
                "The reflection of the house in the water",
                "Sheepdog in sketch style",
                "A photo of a teddy bear on a skateboard in times square",
                "A photo of a landscape in winter",
                "A photo of a landscape in fall",
                "a spaceship landing on the Great Wall",
                "a crayon drawing of a space elevator",
                "a painting of a fox in the style of starry night",
                "an abstract painting of a waterfall",
                "a cartoon of a cow jumping over the moon",
                "a robot cooking in the kitchen",
                "a subway train coming out of a tunnel",
                "A small house in the wilderness",
                "a large yellow circle and a small red square",
                "a futuristic city in synthwave style",
                "view of a clock tower on a cloudy day",
                "a mountain stream with fish leaping out of it",
                "a hot air balloon landing in a corn field",
                "a light shining in the night",
                "a beach with a cruise ship passing by",
                "A photo of mountain cliff and sky",
                "Sea of flowers",
                "A blue colored dog.",
                "A green colored banana.",
                "A blue bird and a brown bear.",
                "A green apple and a black backpack.",
                "A yellow book and a red vase.",
                "A horse riding an astronaut.",
                "Hovering cow abducting aliens.",
                "A shark in the desert.",
                "An elephant under the sea.",
                "Rainbow coloured penguin.",
                "One car on the street.",
                "Two cars on the street.",
                "One cat and one dog sitting on the grass.",
                "Three cats and three dogs sitting on the grass.",
                "A triangular pink stop sign. A pink stop sign in the shape of a triangle.",
                "A single clock is sitting on a table.",
                "A small blue book sitting on a large red book.",
                "An emoji of a baby panda wearing a red hat and green gloves",
                "A fisheye lens view of a turtle sitting in a forest.",
                "A cross-section view of a brain.",
                "A large motor vehicle carrying passengers by road, typically one serving the public on a fixed route and for a fare.",
                "A connection point by which firefighters can tap into a water supply.",
                "A machine next to a parking space in a street, into which the driver puts money so as to be authorized to park the vehicle for a particular length of time.",
                "An appliance or compartment which is artificially kept cool and used to store food and drink.",
                "A mechanical or electrical device for measuring time.",
                "An American multinational technology company that focuses on artificial intelligence.",
                "An oil painting of a couple in formal evening wear going home get caught in a heavy downpour with no umbrellas.",
                "A grocery store refrigerator has milk on the shelf",
                "A man stands in the shadow of a maple tree.",
                "A pear cut into pieces arranged in a ring.",
                "A train on top of a surfboard.",
                "A wine glass on top of a dog.",
                "A bicycle on top of a boat.",
                "A cat on the left of a dog.",
                "A photo of the thunderstorm",
                "A church with stained glass windows depicting a hamburger and french fries.",
                "A photo of a confused grizzly bear in school.",
                "An ancient Egyptian painting.",
                "A tiger in a coat, digital art.",
                "A bus cruising through the rainforest.",
                "McDonalds Church.",
                "A painting an outer space, gothic style.",
                "An oil painting portrait of the Burger King.",
                "A keyboard made of water, the water is made of light, the light is turned off.",
                "A Painting of Mona Lisa.",
                "Hyper-realistic photo of an abandoned industrial site during a storm.",
                "A screenshot of an app.",
                "A real life photography of super mario, 8k Ultra HD.",
                "Colouring page of large cats climbing the eifel tower in a cyberpunk future.",
                "Photo of a mega Lego space station inside a kid's bedroom.",
                "A photocopy of a photograph of a painting of a sculpture of a giraffe.",
                "A bridge connecting Europe and North America on the Atlantic Ocean, bird's eye view.",
                "A poster warning against climate change.",
                "A storefront with ads.",
                "A sign with text on it.",
                "A sign that says 'Deep Learning'.",
            ]

        elif dec_type == 'stylegan':
            if stylegan_eval_mode == 'eval':
                self.texts = [
                    "a person with glasses",
                    "a person with brown hair",
                    "a person with curly blonde hair",
                    "a person with a hat",
                    "a person with bushy eyebrows and a small mouth",
                    "a person smiling",
                    "a person who is angry",
                    "a person looking up at the sky",
                    "a person with their eyes closed",
                    "a person talking",
                    "a man with a beard",
                    "a happy man with a moustache",
                    "a young man",
                    "an old man",
                    "a middle aged man",
                    "a youthful man with a bored expression",
                    "a woman with a hat",
                    "a happy woman with glasses",
                    "a young woman",
                    "an old woman",
                    "a middle aged woman",
                    "a baby crying in a red bouncer",
                    "a child with blue eyes and straight brown hair in the sunshine",
                    "an old woman with large sunglasses and ear rings",
                    "a young man with a bald head who is wearing necklace in the city at night",
                    "a youthful woman with a bored expression",
                    "President Xi Jinping",
                    "Prime Minister Boris Johnson",
                    "President Joe Biden",
                    "President Barack Obama",
                    "Chancellor Angela Merkel",
                    "President Emmanuel Macron",
                    "Prime Minister Shinzo Abe",
                    "Robert De Niro",
                    "Danny Devito",
                    "Denzel Washington",
                    "Meryl Streep",
                    "Cate Blanchett",
                    "Morgan Freeman",
                    "Whoopi Goldberg",
                    "Usain Bolt",
                    "Muhammad Ali",
                    "Serena Williams",
                    "Roger Federer",
                    "Martina Navratilova",
                    "Jessica Ennis-Hill",
                    "Cathy Freeman",
                    "Christiano Ronaldo",
                    "Elsa from Frozen",
                    "Eric Cartman from South Park",
                    "Chihiro from Spirited Away",
                    "Bart from the Simpsons",
                    "Woody from Toy Story",
                    "a university graduate",
                    "a firefighter",
                    "a police officer",
                    "a butcher",
                    "a scientist",
                    "a gardener",
                    "a hairdresser",
                    "a man visiting the beach",
                    "a woman giving a TED talk",
                    "a child playing with friends",
                    "a person watching birds in the forest",
                ]

            elif stylegan_eval_mode == 'test':
                self.texts = [
                    "A photograph of a young man with a beard",
                    "A photograph of a old woman's face with grey hair",
                    "A photograph of a child at a birthday party",
                    "A picture of a face outside in bright sun in front of green grass",
                    "This man has bangs arched eyebrows curly hair and a small nose",
                    "A photo of Barack Obama",
                    "An arctic explorer",
                    "A clown's face covered in make up",
                    "A photo of an old person by the beach",
                    "A portrait of Angela Merkel",
                    "Young boy with sunglasses and an angry face",
                    "Middle aged man with a moustache and a happy expression",
                    "The face of a person who just finished running a marathon",
                    "A vampire's face",
                    "An office worker wearing a shirt looking stressed",
                    "The Mona Lisa", 
                ]

            elif stylegan_eval_mode == 'landscape':
                self.texts = [
                    "a waterfall in a forest",
                    "the windows XP wallpaper",
                    "a tropical beach paradise by the pacific ocean",
                    "a tree",
                    "the sun setting over the sea",
                    "a single triangular snow capped mountain",
                    "a storm",
                    "the northern lights",
                ]

            else:
                raise NotImplementedError

        elif dec_type == 'nvae':
            if nvae_model == 'ffhq':
                self.texts = [
                    "a person with glasses",
                    "a person with brown hair",
                    "a person with curly blonde hair",
                    "a person with a hat",
                    "a person with bushy eyebrows and a small mouth",
                    "a person smiling",
                    "a person who is angry",
                    "a person looking up at the sky",
                    "a person with their eyes closed",
                    "a person talking",
                    "a man with a beard",
                    "a happy man with a moustache",
                    "a young man",
                    "an old man",
                    "a middle aged man",
                    "a youthful man with a bored expression",
                    "a woman with a hat",
                    "a happy woman with glasses",
                    "a young woman",
                    "an old woman",
                    "a middle aged woman",
                    "a baby crying in a red bouncer",
                    "a child with blue eyes and straight brown hair in the sunshine",
                    "an old woman with large sunglasses and ear rings",
                    "a young man with a bald head who is wearing necklace in the city at night",
                    "a youthful woman with a bored expression",
                ]

            elif nvae_model == 'celeba_256':
                self.texts = [
                    "President Xi Jinping",
                    "Prime Minister Boris Johnson",
                    "President Joe Biden",
                    "President Barack Obama",
                    "Chancellor Angela Merkel",
                    "President Emmanuel Macron",
                    "Prime Minister Shinzo Abe",
                    "Robert De Niro",
                    "Danny Devito",
                    "Denzel Washington",
                    "Meryl Streep",
                    "Cate Blanchett",
                    "Morgan Freeman",
                    "Whoopi Goldberg",
                    "Usain Bolt",
                    "Muhammad Ali",
                    "Serena Williams",
                    "Roger Federer",
                    "Martina Navratilova",
                    "Justin Timberlake",
                    "Harry Styles",
                    "Justin Bieber",
                    "Oprah Winfrey",
                    "Cameron Diaz",
                    "Neymar",
                    "Christiano Ronaldo",
                ]

            else:
                raise NotImplementedError

        else:
            raise NotImplementedError
    
        
    def __len__(self) -> int:
        return len(self.texts)

    
    def __getitem__(self, idx: int) -> str:
        return self.texts[idx]
